----- index -----
link_to ( data_attribute, name_attribute)
parameters (through name: single and nested)
time calculations
image_tag
render partials
rendering collections

----- index ---------

<!-- Link_to -->
	<!-- data attribute -->
	<%= link_to content_tag(:div, "Want to add to your Week"), 
	"#", class: "add_to_your_week", :"data-image" => image, :"data-user" => @user %>

	<!-- name attribute -->
	<%= link_to content_tag(:div, "Want to add to your Week"), 
	"#", class: "add_to_your_week", :name => "image[week]", %>

<!-- paramaters -->
<input id="person_name" name="person[name]" type="text" value="Henry"/> <!-- {'person' => {'name' => 'Henry'}} -->
name = params[:person][:name] in controller

<input id="person_address_city" name="person[address][city]" type="text" value="New York"/> <!-- {'person' => {'address' => {'city' => 'New York'}}} -->
city = params[:person][:address][:city] in controller

<!-- Time calculations -->
Beg_range: <%= @beg_range %><br />
End_range: <%= @end_range %><br />
Beg of Week <%= @beg_of_week = @beg_range.to_date.beginning_of_week %><br />
End of Week <%= @end_of_week = @beg_range.to_date.end_of_week %><br />
First of Month: <%= @first_of_month = @beg_range.to_date.beginning_of_month %><br />
Last of Month: <%= @last_of_month = @beg_range.to_date.beginning_of_month.next_month-1 %><br />
First Week of Month:<%= @fir_wk_of_month = @beg_range.to_date.beginning_of_month.beginning_of_week %><br />


<!-- image_tag  -->
<%= image_tag "home.gif", :onmouseover => "menu/home_highlight.gif" %>
<%= image_tag "home.gif", :size => "50x20" %>

<!-- render partials  -->
<%= render "menu" %>
<%= render "shared/menu" %>

<%= render :partial => "form", :locals => { :zone => @zone } %>

	<!-- Every partial also has a local variable with the same name as the partial (minus the underscore). You can pass an object in to this local variable via the :object option: -->
	<%= render :partial => "customer", :object => @new_customer %>

	<!-- Assuming that the @customer instance variable contains an instance of the Customer model, this will use _customer.html.erb to render it and will pass the local variable customer into the partial which will refer to the @customer instance variable in the parent view. -->
	<%= render @customer %>

	<!-- rendering collections -->
	index.html.erb
	<h1>Products</h1>
	<%= render :partial => "product", :collection => @products %>

	_product.html.erb
	<p>Product Name: <%= product.name %></p>

	<!-- In Rails 3.0, there is also a shorthand for this. Assuming @products is a collection of product instances, you can simply write this in the index.html.erb to produce the same result: -->
	<h1>Products</h1>
	<%= render @products %>